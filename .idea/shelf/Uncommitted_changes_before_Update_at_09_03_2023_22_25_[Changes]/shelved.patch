Index: server/src/main/java/ServerThread.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.io.DataInputStream;\nimport java.io.IOException;\nimport java.io.PrintWriter;\nimport java.net.ServerSocket;\nimport java.net.Socket;\n\npublic class ServerThread extends Thread {\n    private final int port;\n    private DataInputStream in;\n    private PrintWriter out;\n    private ServerSocket server;\n    private Socket socket;\n\n    public ServerThread ( int port ) {\n        this.port = port;\n        try {\n            server = new ServerSocket ( this.port );\n        } catch ( IOException e ) {\n            e.printStackTrace ( );\n        }\n    }\n\n    /**\n     * Explicar Java Doc\n     */\n    public void run ( ) {\n\n        while ( true ) {\n            try {\n                System.out.println ( \"Accepting Data\" );\n                socket = server.accept ( );\n                in = new DataInputStream ( socket.getInputStream ( ) );\n                out = new PrintWriter ( socket.getOutputStream ( ) , true );\n                String message = in.readUTF ( );\n                System.out.println ( \"***** \" + message + \" *****\" );\n                out.println ( message.toUpperCase ( ) );\n            } catch ( IOException e ) {\n                e.printStackTrace ( );\n            }\n        }\n\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/server/src/main/java/ServerThread.java b/server/src/main/java/ServerThread.java
--- a/server/src/main/java/ServerThread.java	(revision e9d3d63eb47d7d265eedbb8c09b8514e3de90b38)
+++ b/server/src/main/java/ServerThread.java	(date 1678316308990)
@@ -23,7 +23,7 @@
     /**
      * Explicar Java Doc
      */
-    public void run ( ) {
+    /**public void run ( ) {
 
         while ( true ) {
             try {
@@ -39,5 +39,28 @@
             }
         }
 
+    }*/
+
+    public void run() {
+        try {
+            System.out.println("Server is running on port " + port);
+
+            while (true) {
+                Socket clientSocket = server.accept();
+                System.out.println("New client connected: " + clientSocket);
+
+                // Create a new thread to handle the client
+                ClientHandler clientHandler = new ClientHandler (clientSocket, id);
+                clientHandler.start();
+            }
+        } catch (IOException e) {
+            e.printStackTrace();
+        } finally {
+            try {
+                server.close();
+            } catch (IOException e) {
+                e.printStackTrace();
+            }
+        }
     }
 }
Index: server/src/main/java/ClientHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/server/src/main/java/ClientHandler.java b/server/src/main/java/ClientHandler.java
new file mode 100644
--- /dev/null	(date 1678234124292)
+++ b/server/src/main/java/ClientHandler.java	(date 1678234124292)
@@ -0,0 +1,51 @@
+import java.io.BufferedReader;
+import java.io.DataOutputStream;
+import java.io.FileWriter;
+import java.io.IOException;
+import java.io.InputStreamReader;
+import java.io.PrintWriter;
+import java.net.Socket;
+import java.time.LocalDateTime;
+import java.time.format.DateTimeFormatter;
+
+public class ClientHandler extends Thread {
+    private final Socket socket;
+    private final int id;
+    private final DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
+
+    public ClientHandler(Socket socket, int id) {
+        this.socket = socket;
+        this.id = id;
+    }
+
+    public void run() {
+        try (BufferedReader in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
+             DataOutputStream out = new DataOutputStream(socket.getOutputStream())) {
+
+            PrintWriter logWriter = new PrintWriter(new FileWriter("server.log", true), true);
+
+            LocalDateTime connectTime = LocalDateTime.now();
+            logWriter.println(connectTime.format(formatter) + ": Client " + id + " connected.");
+
+            while (true) {
+                String message = in.readLine();
+                if (message == null) break;
+
+                LocalDateTime receiveTime = LocalDateTime.now();
+                logWriter.println(receiveTime.format(formatter) + ": Client " + id + " sent message: " + message);
+
+                String response = "Response to " + message;
+                out.writeUTF(response);
+
+                LocalDateTime sendTime = LocalDateTime.now();
+                logWriter.println(sendTime.format(formatter) + ": Server sent response to Client " + id + ": " + response);
+            }
+
+            LocalDateTime disconnectTime = LocalDateTime.now();
+            logWriter.println(disconnectTime.format(formatter) + ": Client " + id + " disconnected.");
+
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+    }
+}
